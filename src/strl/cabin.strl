module CABIN:
    input SECOND;
    input OPENDOOR;
    input FLOORTARGET:integer, FLOORBUTTON:integer;
    output DOOR_OPENED, DOOR_CLOSED;
    output FLOORSTATE:integer;

    var floor:=1:integer, duration:integer, doorstate:=false:boolean in
    emit FLOORSTATE(floor);
    loop		
	    await 
        case FLOORBUTTON do
            if floor = ?FLOORBUTTON then
                if doorstate = false then   % if is closed 
                    run OpenDoor;
                    doorstate:=true;
                end if;

            else

                if doorstate = true then   % if is opened
                    run CloseDoor;
                    doorstate:=false;
                end if;
				
                if floor > ?FLOORBUTTON then
                    duration := (floor - ?FLOORBUTTON);
                    repeat duration times
                        run FloorProcessingTime;
                        floor := floor - 1;
                        emit FLOORSTATE(floor);
                    end repeat;
                else
                    duration := (?FLOORBUTTON - floor);
                    repeat duration times
                        run FloorProcessingTime;
                        floor := floor + 1;
                        emit FLOORSTATE(floor);
			        end repeat;
                end if;

                run OpenDoor;
                doorstate := true;

                run DoorAwaitingTime;

                run CloseDoor;
                doorstate:=false;

            end if;

        case FLOORTARGET do
            if floor = ?FLOORTARGET then
                if doorstate = false then   % if is closed 
                    run OpenDoor;
                    doorstate:=true;
                end if;

            else

                if doorstate = true then   % if is opened
                    run CloseDoor;
                    doorstate:=false;
                end if;

                if floor > ?FLOORTARGET then
                    duration := (floor - ?FLOORTARGET);
                    repeat duration times
                        run FloorProcessingTime;
                        floor := floor - 1;
                        emit FLOORSTATE(floor);
                    end repeat;
                else
                    duration := (?FLOORTARGET - floor);
                    repeat duration times
                        run FloorProcessingTime;
                        floor := floor + 1;
                        emit FLOORSTATE(floor);
                    end repeat;
                end if;

                run OpenDoor;
                doorstate := true;

                run DoorAwaitingTime;

                run CloseDoor;
                doorstate:=false;
            end if;

        case OPENDOOR do
            if doorstate = false then   % if is closed 
                run OpenDoor;
                doorstate:=true;

                run DoorAwaitingTime;

                run CloseDoor;
                doorstate:=false;
            end if;
            
        end await
    end loop
    end var

end module
